<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>formal methods | Luoxi Meng 孟罗希</title><link>/tag/formal-methods/</link><atom:link href="/tag/formal-methods/index.xml" rel="self" type="application/rss+xml"/><description>formal methods</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 02 Oct 2022 15:16:44 +0300</lastBuildDate><image><url>/images/icon_hu0ff384de8e110f255a8c78ff7f1417a1_29751_512x512_fill_lanczos_center_3.png</url><title>formal methods</title><link>/tag/formal-methods/</link></image><item><title>Cruiser</title><link>/project/cruiser/</link><pubDate>Sun, 02 Oct 2022 15:16:44 +0300</pubDate><guid>/project/cruiser/</guid><description>&lt;p>Existing verification approaches either require vast amounts of manual effort or are too abstract to be practical by verifying high-level protocols or greatly inefficient implementations.
&lt;strong>Cruiser&lt;/strong> is an approach that produces &lt;em>high-performance, fully verified&lt;/em> distributed system implementations, while relying on &lt;em>very little manual effort&lt;/em>.&lt;/p></description></item></channel></rss>